buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)' apply false
    id 'org.parchmentmc.librarian.forgegradle' version '1.+' apply false
}

allprojects {
    apply plugin: 'java'
    java {
        toolchain.languageVersion = JavaLanguageVersion.of(17)
    }

    repositories {
        // Put repositories for dependencies here
        // ForgeGradle automatically adds the Forge maven and Maven Central for you

        // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver
        // flatDir {
        //     dir 'libs'
        // }
        maven {
            // JEI
            name "Jared's maven"
            url "https://maven.blamejared.com/"
        }
        maven {
            // JEI fallback
            name "ModMaven"
            url "https://modmaven.dev"
        }
        maven { //WTHIT
            url "https://maven2.bai.lol"
            content {
                includeGroup "lol.bai"
                includeGroup "mcp.mobius.waila"
            }
        }
        maven {
            name = 'GeckoLib'
            url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
            content {
                includeGroupByRegex("software\\.bernie.*")
                includeGroup("com.eliotlash.mclib")
            }
        }
    }
}

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'net.minecraftforge.gradle';
    apply plugin: 'org.parchmentmc.librarian.forgegradle'

    dependencies {
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

        testImplementation platform("org.junit:junit-bom:5.13.4")
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    }

    test
    {
        useJUnitPlatform()
    }

    sourceSets {
        main {
            java {
                setSrcDirs(['main/java'])
            }
            resources {
                setSrcDirs(['main/resources', 'generated/resources'])
            }
        }
        test {
            java {
                setSrcDirs(["test/java"])
            }
            resources {
                setSrcDirs(["test/resources"])
            }
        }
    }
}